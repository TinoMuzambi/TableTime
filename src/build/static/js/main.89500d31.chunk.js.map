{"version":3,"sources":["Components/SplashScreen.js","Components/Score.js","Components/ScoreHolder.js","Components/StartGame.js","Components/History.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["SplashScreen","className","src","alt","to","Component","Score","state","score","incScore","bind","decScore","resetScore","this","setState","document","querySelectorAll","forEach","button","classList","remove","deuceScore","props","updateScore","id","buttons","deuce","add","onClick","player","ScoreHolder","gameDetails","gameType","bestOf","player1","player2","player1CurrScore","player2CurrScore","globalDeuce","games","date","player1Score","player2Score","status","currentGame","gameData","numericalBestOf","winner","firstScore","React","createRef","secondScore","startNextGame","startNewGame","handleConfirm","isMatchOver","location","a","fetch","result","json","body","fetchData","confirmAlert","title","message","label","current","card","querySelector","player1Games","player2Games","index","length","Math","ceil","p1","push","p2","Object","keys","toString","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","handleWinner","method","headers","JSON","stringify","history","goBack","ref","withRouter","StartGame","setGameType","setBestOf","setPlayer1","setPlayer2","parseInt","onChange","e","target","value","placeholder","name","pathname","History","arrayGames","i","map","game","key","format","About","href","App","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.89500d31.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SplashScreen.css\";\r\n\r\nclass SplashScreen extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"splash-holder\">\r\n\t\t\t\t\t<img src=\"/logo512.png\" alt=\"logo\" className=\"logo\" />\r\n\t\t\t\t\t<ul className=\"links\">\r\n\t\t\t\t\t\t<li className=\"link\">\r\n\t\t\t\t\t\t\t<Link to=\"/start\" className=\"link\">\r\n\t\t\t\t\t\t\t\tNew Game\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t<li className=\"link\">\r\n\t\t\t\t\t\t\t<Link to=\"/history\" className=\"link\">\r\n\t\t\t\t\t\t\t\tHistory\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"link\">\r\n\t\t\t\t\t\t\t<Link to=\"/about\" className=\"link\">\r\n\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SplashScreen;\r\n","import React, { Component } from \"react\";\r\nimport \"./Score.css\";\r\n\r\nclass Score extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tscore: 0,\r\n\t\t};\r\n\r\n\t\tthis.incScore = this.incScore.bind(this); // Binding methods with this instance.\r\n\t\tthis.decScore = this.decScore.bind(this);\r\n\t\tthis.resetScore = this.resetScore.bind(this);\r\n\t}\r\n\r\n\tasync resetScore() {\r\n\t\tawait this.setState({ score: 0 });\r\n\t\tconst buttons = document.querySelectorAll(\".button\");\r\n\t\tbuttons.forEach((button) => {\r\n\t\t\tbutton.classList.remove(\"done\");\r\n\t\t});\r\n\t}\r\n\r\n\tasync incScore() {\r\n\t\tlet deuceScore = this.props.deuceScore;\r\n\t\tawait this.setState({ score: this.state.score + 1 });\r\n\t\tawait this.props.updateScore(this.props.id, this.state.score, deuceScore);\r\n\t\tconst buttons = document.querySelectorAll(\".button\");\r\n\t\tif (this.props.deuce) {\r\n\t\t\tdeuceScore++;\r\n\t\t\tawait this.props.updateScore(this.props.id, this.state.score, deuceScore);\r\n\t\t\tif (this.state.score === deuceScore + 1) {\r\n\t\t\t\t// Increment score but first check if game is over.\r\n\t\t\t\tbuttons.forEach((button) => {\r\n\t\t\t\t\tbutton.classList.add(\"done\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.state.score === this.props.deuceScore) {\r\n\t\t\t\t// Increment score but first check if game is over.\r\n\t\t\t\tbuttons.forEach((button) => {\r\n\t\t\t\t\tbutton.classList.add(\"done\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync decScore() {\r\n\t\tconst deuceScore = this.props.deuceScore;\r\n\t\t(await this.state.score) > 0\r\n\t\t\t? this.setState({ score: this.state.score - 1 }) // Decrement score but first check if score is zero.\r\n\t\t\t: this.setState({ score: 0 });\r\n\t\tawait this.props.updateScore(this.props.id, this.state.score, deuceScore);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"score\">\r\n\t\t\t\t\t<h1 className=\"curr-score\">{this.state.score}</h1>\r\n\t\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t\t<button className=\"button plus\" onClick={this.incScore}>\r\n\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"button minus\" onClick={this.decScore}>\r\n\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1 className=\"player\">{this.props.player}</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Score;\r\n","import React, { Component } from \"react\";\r\nimport \"./ScoreHolder.css\";\r\nimport Score from \"./Score\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { MdArrowBack } from \"react-icons/md\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScoreHolder extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tgameDetails: {\r\n\t\t\t\tgameType: 11,\r\n\t\t\t\tbestOf: \"\",\r\n\t\t\t\tplayer1: \"\",\r\n\t\t\t\tplayer2: \"\",\r\n\t\t\t\tdeuce: false,\r\n\t\t\t},\r\n\t\t\tplayer1CurrScore: 0,\r\n\t\t\tplayer2CurrScore: 0,\r\n\t\t\tdeuceScore: 0,\r\n\t\t\tglobalDeuce: false,\r\n\t\t\tgames: {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tdate: \"\",\r\n\t\t\t\tbestOf: \"\",\r\n\t\t\t\tgameType: 0,\r\n\t\t\t\tplayer1: \"\",\r\n\t\t\t\tplayer2: \"\",\r\n\t\t\t\tplayer1Score: [],\r\n\t\t\t\tplayer2Score: [],\r\n\t\t\t},\r\n\t\t\tstatus: \"BAU\",\r\n\t\t\tcurrentGame: 1,\r\n\t\t\tgameData: {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tdate: \"\",\r\n\t\t\t\tbestOf: \"\",\r\n\t\t\t\tgameType: 0,\r\n\t\t\t\tplayer1: \"\",\r\n\t\t\t\tplayer2: \"\",\r\n\t\t\t\tplayer1Score: [],\r\n\t\t\t\tplayer2Score: [],\r\n\t\t\t},\r\n\t\t\tnumericalBestOf: 1,\r\n\t\t\twinner: \"\",\r\n\t\t};\r\n\r\n\t\tthis.firstScore = React.createRef();\r\n\t\tthis.secondScore = React.createRef();\r\n\r\n\t\tthis.updateScore = this.updateScore.bind(this); // Binding method with this instance.\r\n\t\tthis.startNextGame = this.startNextGame.bind(this);\r\n\t\tthis.startNewGame = this.startNewGame.bind(this);\r\n\t\tthis.handleConfirm = this.handleConfirm.bind(this);\r\n\t\tthis.isMatchOver = this.isMatchOver.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { gameDetails } = this.props.location.state;\r\n\t\tawait this.setState({ gameDetails: gameDetails });\r\n\t\tawait this.setState({ deuceScore: this.state.gameDetails.gameType });\r\n\t\tif (this.state.gameDetails.bestOf === \"Best of 3\") {\r\n\t\t\tthis.setState({ numericalBestOf: 3 });\r\n\t\t} else if (this.state.gameDetails.bestOf === \"Best of 5\") {\r\n\t\t\tthis.setState({ numericalBestOf: 5 });\r\n\t\t}\r\n\t}\r\n\r\n\tasync UNSAFE_componentWillMount() {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst result = await fetch(`/api/games`);\r\n\t\t\tconst body = await result.json();\r\n\t\t\tawait this.setState({ games: body });\r\n\t\t};\r\n\t\tfetchData();\r\n\t}\r\n\r\n\thandleConfirm() {\r\n\t\tconfirmAlert({\r\n\t\t\ttitle: \"Start New Game\",\r\n\t\t\tmessage: \"Are you sure you want to start a new game?\",\r\n\t\t\tbuttons: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Yes\",\r\n\t\t\t\t\tonClick: () => this.startNewGame(),\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"No\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t}\r\n\r\n\thandleWinner() {\r\n\t\tconfirmAlert({\r\n\t\t\ttitle: \"And the winner is...\",\r\n\t\t\tmessage: `...${this.state.winner}`,\r\n\t\t\tbuttons: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Ok\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t}\r\n\r\n\tasync startNewGame() {\r\n\t\tthis.firstScore.current.resetScore();\r\n\t\tthis.secondScore.current.resetScore();\r\n\t\tawait this.setState({\r\n\t\t\tplayer1CurrScore: 0,\r\n\t\t\tplayer2CurrScore: 0,\r\n\t\t\tstatus: \"BAU\",\r\n\t\t\tglobalDeuce: false,\r\n\t\t\tdeuceScore: this.state.gameDetails.gameType,\r\n\t\t\tcurrentGame: 1,\r\n\t\t\tgameData: {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tdate: \"\",\r\n\t\t\t\tbestOf: \"\",\r\n\t\t\t\tgameType: 0,\r\n\t\t\t\tplayer1: \"\",\r\n\t\t\t\tplayer2: \"\",\r\n\t\t\t\tplayer1Score: [],\r\n\t\t\t\tplayer2Score: [],\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst card = document.querySelectorAll(\".score\");\r\n\t\tcard[0].classList.remove(\"winner\");\r\n\t\tcard[1].classList.remove(\"loser\");\r\n\t\tcard[0].classList.remove(\"loser\");\r\n\t\tcard[1].classList.remove(\"winner\");\r\n\t\tdocument.querySelector(\".next-button\").classList.remove(\"clickable\");\r\n\t}\r\n\r\n\tasync startNextGame() {\r\n\t\tthis.firstScore.current.resetScore();\r\n\t\tthis.secondScore.current.resetScore();\r\n\t\tawait this.setState({\r\n\t\t\tplayer1CurrScore: 0,\r\n\t\t\tplayer2CurrScore: 0,\r\n\t\t\tstatus: \"BAU\",\r\n\t\t\tglobalDeuce: false,\r\n\t\t\tdeuceScore: this.state.gameDetails.gameType,\r\n\t\t});\r\n\t\tconst card = document.querySelectorAll(\".score\");\r\n\t\tcard[0].classList.remove(\"winner\");\r\n\t\tcard[1].classList.remove(\"loser\");\r\n\t\tcard[0].classList.remove(\"loser\");\r\n\t\tcard[1].classList.remove(\"winner\");\r\n\t\tawait this.setState({ currentGame: this.state.currentGame + 1 });\r\n\t\tdocument.querySelector(\".next-button\").classList.remove(\"clickable\");\r\n\t}\r\n\r\n\tisMatchOver() {\r\n\t\tconst player1Score = this.state.gameData.player1Score;\r\n\t\tconst player2Score = this.state.gameData.player2Score;\r\n\t\tconst bestOf = this.state.numericalBestOf;\r\n\r\n\t\tlet player1Games = 0;\r\n\t\tlet player2Games = 0;\r\n\r\n\t\tfor (let index = 0; index < player1Score.length; index++) {\r\n\t\t\tif (player1Score[index] > player2Score[index]) {\r\n\t\t\t\tplayer1Games++;\r\n\t\t\t} else {\r\n\t\t\t\tplayer2Games++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (player1Games > player2Games) {\r\n\t\t\treturn player1Games >= Math.ceil(bestOf / 2);\r\n\t\t}\r\n\t\treturn player2Games >= Math.ceil(bestOf / 2);\r\n\t}\r\n\r\n\tasync updateScore(player, score, deuceScore) {\r\n\t\tplayer === 0\r\n\t\t\t? await this.setState({ player1CurrScore: score, deuceScore: deuceScore })\r\n\t\t\t: await this.setState({\r\n\t\t\t\t\tplayer2CurrScore: score,\r\n\t\t\t\t\tdeuceScore: deuceScore,\r\n\t\t\t  });\r\n\r\n\t\tif (\r\n\t\t\t// Update status of game\r\n\t\t\tthis.state.player1CurrScore === this.state.deuceScore ||\r\n\t\t\tthis.state.player2CurrScore === this.state.deuceScore\r\n\t\t) {\r\n\t\t\tconst card = document.querySelectorAll(\".score\");\r\n\t\t\tif (this.state.player1CurrScore > this.state.player2CurrScore) {\r\n\t\t\t\t// Make winning score card green and update status.\r\n\t\t\t\tcard[0].classList.add(\"winner\");\r\n\t\t\t\tcard[1].classList.add(\"loser\");\r\n\t\t\t\tawait this.setState({\r\n\t\t\t\t\tstatus: `Game ${this.state.gameDetails.player1}!`,\r\n\t\t\t\t\twinner: this.state.gameDetails.player1,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tcard[0].classList.add(\"loser\");\r\n\t\t\t\tcard[1].classList.add(\"winner\");\r\n\t\t\t\tawait this.setState({\r\n\t\t\t\t\tstatus: `Game ${this.state.gameDetails.player2}!`,\r\n\t\t\t\t\twinner: this.state.gameDetails.player2,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tlet p1 = this.state.gameData.player1Score;\r\n\t\t\tp1.push(this.state.player1CurrScore);\r\n\t\t\tlet p2 = this.state.gameData.player2Score;\r\n\t\t\tp2.push(this.state.player2CurrScore);\r\n\t\t\tdocument.querySelector(\".next-button\").classList.remove(\"clickable\");\r\n\t\t\tconst gameData = {\r\n\t\t\t\t// Temporary appending to game data.\r\n\t\t\t\tid: Object.keys(this.state.games).length.toString(),\r\n\t\t\t\tdate:\r\n\t\t\t\t\tnew Date().getFullYear() +\r\n\t\t\t\t\t\"-\" +\r\n\t\t\t\t\t(new Date().getMonth() + 1) +\r\n\t\t\t\t\t\"-\" +\r\n\t\t\t\t\tnew Date().getDate() +\r\n\t\t\t\t\t\" \" +\r\n\t\t\t\t\tnew Date().getHours() +\r\n\t\t\t\t\t\":\" +\r\n\t\t\t\t\tnew Date().getMinutes() +\r\n\t\t\t\t\t\":\" +\r\n\t\t\t\t\tnew Date().getSeconds(),\r\n\t\t\t\tbestOf: this.state.gameDetails.bestOf,\r\n\t\t\t\tgameType: this.state.gameDetails.gameType,\r\n\t\t\t\tplayer1: this.state.gameDetails.player1,\r\n\t\t\t\tplayer2: this.state.gameDetails.player2,\r\n\t\t\t\tplayer1Score: p1,\r\n\t\t\t\tplayer2Score: p2,\r\n\t\t\t};\r\n\r\n\t\t\tawait this.setState({ gameData: gameData });\r\n\t\t\tif (this.isMatchOver()) {\r\n\t\t\t\tthis.handleWinner();\r\n\t\t\t\tthis.state.games[\r\n\t\t\t\t\tObject.keys(this.state.games).length\r\n\t\t\t\t] = this.state.gameData;\r\n\t\t\t\tawait fetch(`api/game/insert`, {\r\n\t\t\t\t\tmethod: \"post\",\r\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\t\t\tbody: JSON.stringify(gameData),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdocument.querySelector(\".next-button\").classList.add(\"clickable\");\r\n\t\t\t}\r\n\t\t} else if (\r\n\t\t\tthis.state.player1CurrScore === this.state.deuceScore - 1 &&\r\n\t\t\tthis.state.player2CurrScore === this.state.deuceScore - 1\r\n\t\t) {\r\n\t\t\tawait this.setState({ status: \"Deuce!\" });\r\n\t\t\tawait this.setState({\r\n\t\t\t\tgameDetails: {\r\n\t\t\t\t\tgameType: this.state.gameDetails.gameType,\r\n\t\t\t\t\tbestOf: this.state.gameDetails.bestOf,\r\n\t\t\t\t\tplayer1: this.state.gameDetails.player1,\r\n\t\t\t\t\tplayer2: this.state.gameDetails.player2,\r\n\t\t\t\t\tdeuce: true,\r\n\t\t\t\t},\r\n\t\t\t\tglobalDeuce: true,\r\n\t\t\t});\r\n\t\t\tdocument.querySelector(\".next-button\").classList.remove(\"clickable\");\r\n\t\t} else if (\r\n\t\t\tthis.state.player1CurrScore === this.state.deuceScore - 1 ||\r\n\t\t\tthis.state.player2CurrScore === this.state.deuceScore - 1\r\n\t\t) {\r\n\t\t\tawait this.setState({ status: \"Game Point!\" });\r\n\t\t\tawait this.setState({\r\n\t\t\t\tgameDetails: {\r\n\t\t\t\t\tgameType: this.state.gameDetails.gameType,\r\n\t\t\t\t\tbestOf: this.state.gameDetails.bestOf,\r\n\t\t\t\t\tplayer1: this.state.gameDetails.player1,\r\n\t\t\t\t\tplayer2: this.state.gameDetails.player2,\r\n\t\t\t\t\tdeuce: false,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tdocument.querySelector(\".next-button\").classList.remove(\"clickable\");\r\n\t\t} else {\r\n\t\t\tif (this.state.globalDeuce) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.state.player1CurrScore === this.state.deuceScore - 2 &&\r\n\t\t\t\t\tthis.state.player2CurrScore === this.state.deuceScore - 2\r\n\t\t\t\t) {\r\n\t\t\t\t\tawait this.setState({ status: \"Deuce!\" });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait this.setState({ status: \"BAU\" });\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tawait this.setState({ status: \"BAU\" });\r\n\t\t\t}\r\n\r\n\t\t\tawait this.setState({\r\n\t\t\t\tgameDetails: {\r\n\t\t\t\t\tgameType: this.state.gameDetails.gameType,\r\n\t\t\t\t\tbestOf: this.state.gameDetails.bestOf,\r\n\t\t\t\t\tplayer1: this.state.gameDetails.player1,\r\n\t\t\t\t\tplayer2: this.state.gameDetails.player2,\r\n\t\t\t\t\tdeuce: false,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tdocument.querySelector(\".next-button\").classList.remove(\"clickable\");\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"score-holder\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"score-back-button\"\r\n\t\t\t\t\t\tonClick={this.props.history.goBack}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MdArrowBack className=\"button-link\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h1 className=\"game-type\">Game {this.state.gameDetails.gameType}</h1>\r\n\t\t\t\t\t<button className={\"new-button\"} onClick={this.handleConfirm}>\r\n\t\t\t\t\t\tNew Game\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h2 className=\"best-of\">\r\n\t\t\t\t\t\tGame {this.state.currentGame}/{this.state.numericalBestOf}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={`next-button ${\r\n\t\t\t\t\t\t\tthis.state.gameDetails.bestOf !== \"Single Game\"\r\n\t\t\t\t\t\t\t\t? \"shown\"\r\n\t\t\t\t\t\t\t\t: \"hidden\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={this.startNextGame}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNext Game\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<Score\r\n\t\t\t\t\t\tgameType={this.state.gameDetails.gameType}\r\n\t\t\t\t\t\tplayer={this.state.gameDetails.player1}\r\n\t\t\t\t\t\tupdateScore={this.updateScore}\r\n\t\t\t\t\t\tid={0}\r\n\t\t\t\t\t\tclassName=\"score1\"\r\n\t\t\t\t\t\tdeuce={this.state.gameDetails.deuce}\r\n\t\t\t\t\t\tdeuceScore={this.state.deuceScore}\r\n\t\t\t\t\t\tref={this.firstScore}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h2 className=\"status\">{this.state.status}</h2>{\" \"}\r\n\t\t\t\t\t<h1 className=\"separator\">-</h1>\r\n\t\t\t\t\t<Score\r\n\t\t\t\t\t\tgameType={this.state.gameDetails.gameType}\r\n\t\t\t\t\t\tplayer={this.state.gameDetails.player2}\r\n\t\t\t\t\t\tupdateScore={this.updateScore}\r\n\t\t\t\t\t\tid={1}\r\n\t\t\t\t\t\tclassName=\"score2\"\r\n\t\t\t\t\t\tdeuce={this.state.gameDetails.deuce}\r\n\t\t\t\t\t\tdeuceScore={this.state.deuceScore}\r\n\t\t\t\t\t\tref={this.secondScore}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(ScoreHolder);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./StartGame.css\";\r\nimport {\r\n\tMdKeyboardArrowDown,\r\n\tMdArrowForward,\r\n\tMdArrowBack,\r\n} from \"react-icons/md\";\r\n\r\nclass StartGame extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tplayer1: \"\",\r\n\t\t\tplayer2: \"\",\r\n\t\t\tgameType: 11,\r\n\t\t\tbestOf: \"Single Game\",\r\n\t\t};\r\n\r\n\t\tthis.setGameType = this.setGameType.bind(this); // Binding methods with this instance.\r\n\t\tthis.setBestOf = this.setBestOf.bind(this);\r\n\t\tthis.setPlayer1 = this.setPlayer1.bind(this);\r\n\t\tthis.setPlayer2 = this.setPlayer2.bind(this);\r\n\t}\r\n\r\n\tasync setGameType(gameType) {\r\n\t\t// Update state methods.\r\n\t\tawait this.setState({ gameType: parseInt(gameType) });\r\n\t}\r\n\r\n\tasync setBestOf(bestOf) {\r\n\t\tawait this.setState({ bestOf: bestOf });\r\n\t}\r\n\r\n\tsetPlayer1(player1) {\r\n\t\tthis.setState({ player1: player1 });\r\n\t}\r\n\r\n\tsetPlayer2(player2) {\r\n\t\tthis.setState({ player2: player2 });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"start-holder\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"start-back-button\"\r\n\t\t\t\t\t\tonClick={this.props.history.goBack}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MdArrowBack className=\"button-link\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h1 className=\"heading\">Table Time</h1>\r\n\t\t\t\t\t<div className=\"player-input player1\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"player1\"\r\n\t\t\t\t\t\t\tonChange={(e) => this.setPlayer1(e.target.value)}\r\n\t\t\t\t\t\t\tplaceholder=\"Player 1\"\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1 className=\"vs\">vs</h1>\r\n\t\t\t\t\t<div className=\"player-input player2\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid=\"player2\"\r\n\t\t\t\t\t\t\tonChange={(e) => this.setPlayer2(e.target.value)}\r\n\t\t\t\t\t\t\tplaceholder=\"Player 2\"\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname=\"game\"\r\n\t\t\t\t\t\t\tid=\"game\"\r\n\t\t\t\t\t\t\tonChange={(e) => this.setGameType(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"11\">Game 11</option>\r\n\t\t\t\t\t\t\t<option value=\"21\">Game 21</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<MdKeyboardArrowDown className=\"game-arrow\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"rounds\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname=\"rounds\"\r\n\t\t\t\t\t\t\tid=\"rounds\"\r\n\t\t\t\t\t\t\tonChange={(e) => this.setBestOf(e.target.value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"Single Game\">Single Game</option>\r\n\t\t\t\t\t\t\t<option value=\"Best of 3\">Best of 3</option>\r\n\t\t\t\t\t\t\t<option value=\"Best of 5\">Best of 5</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<MdKeyboardArrowDown className=\"rounds-arrow\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"button-start\">\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: \"/game\",\r\n\t\t\t\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t\t\t\tgameDetails: {\r\n\t\t\t\t\t\t\t\t\t\tgameType: this.state.gameType,\r\n\t\t\t\t\t\t\t\t\t\tbestOf: this.state.bestOf,\r\n\t\t\t\t\t\t\t\t\t\tplayer1: this.state.player1,\r\n\t\t\t\t\t\t\t\t\t\tplayer2: this.state.player2,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName=\"button-link\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MdArrowForward />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(StartGame);\r\n","import React, { Component } from \"react\";\r\nimport \"./History.css\";\r\nimport Moment from \"react-moment\";\r\nimport { MdArrowBack } from \"react-icons/md\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass History extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tgames: {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tdate: \"\",\r\n\t\t\t\tbestOf: \"\",\r\n\t\t\t\tgameType: 0,\r\n\t\t\t\tplayer1: \"\",\r\n\t\t\t\tplayer2: \"\",\r\n\t\t\t\tplayer1Score: [],\r\n\t\t\t\tplayer2Score: [],\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tasync UNSAFE_componentWillMount() {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst result = await fetch(`/api/games`);\r\n\t\t\tconst body = await result.json();\r\n\t\t\tawait this.setState({ games: body });\r\n\t\t};\r\n\t\tfetchData();\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet arrayGames = [];\r\n\t\tfor (let i in this.state.games) arrayGames.push([i, this.state.games[i]]);\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"history-holder\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"hist-back-button\"\r\n\t\t\t\t\t\tonClick={this.props.history.goBack}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MdArrowBack className=\"button-link\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h1 className=\"title\">History</h1>\r\n\r\n\t\t\t\t\t<div className=\"scores-container\">\r\n\t\t\t\t\t\t{/* Mapping each game into div component. */}\r\n\t\t\t\t\t\t{arrayGames.map((game, key) => (\r\n\t\t\t\t\t\t\t<div className=\"score-list\" key={key}>\r\n\t\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t\t{game[1][\"player1\"]} vs {game[1][\"player2\"]}\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t{game[1][\"player1Score\"]} - {game[1][\"player2Score\"]}\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t<Moment format=\"DD MMMM YYYY HH:mm\">{game[1][\"date\"]}</Moment>{\" \"}\r\n\t\t\t\t\t\t\t\t\t{/* Moment library for formatting dates. */}\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t{/* <div>\r\n\t\t\t\t\t\t\t\t\t{game[1][\"player1Score\"].map((score, key) => (\r\n\t\t\t\t\t\t\t\t\t\t<h3 key={key}>{score}</h3>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t<h3>-</h3>\r\n\t\t\t\t\t\t\t\t\t{game[1][\"player2Score\"].map((score, key) => (\r\n\t\t\t\t\t\t\t\t\t\t<h3 key={key}>{score}</h3>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t{game[1][\"bestOf\"]} - Game {game[1][\"gameType\"]}\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(History);\r\n","import React, { Component } from \"react\";\r\nimport \"./About.css\";\r\nimport { MdArrowBack } from \"react-icons/md\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"about-holder\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"about-back-button\"\r\n\t\t\t\t\t\tonClick={this.props.history.goBack}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MdArrowBack className=\"button-link\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h1 className=\"about-title\">About</h1>\r\n\t\t\t\t\t<img src=\"/logo512.png\" alt=\"logo\" className=\"about-logo\" />\r\n\t\t\t\t\t<p className=\"footer\">\r\n\t\t\t\t\t\tDeveloped by{\" \"}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref=\"https://bit.ly/TinoLinkedIn\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"__blank\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"link-link\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tTino Muzambi\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<p className=\"version\">Table Time © v 1.0</p>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(About);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport SplashScreen from \"./Components/SplashScreen\";\nimport ScoreHolder from \"./Components/ScoreHolder\";\nimport StartGame from \"./Components/StartGame\";\nimport History from \"./Components/History\";\nimport About from \"./Components/About\";\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" component={SplashScreen} exact />\n\t\t\t\t\t<Route path=\"/start\" component={StartGame} />\n\t\t\t\t\t<Route path=\"/game\" component={ScoreHolder} />\n\t\t\t\t\t<Route path=\"/history\" component={History} />\n\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"whatwg-fetch\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}